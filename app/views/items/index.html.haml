:javascript
  $(document).on('ajax:success',"#request_button", function(xhr, data, response) {
    if (!data.error){
        $.gritter.add({
            image: '/assets/success.png',
            title: 'Notification',
            text: 'Item has been requested successfully!',
            class_name: 'gritter-info gritter-center'
        });
    }else{
       $.gritter.add({
            image: '/assets/error.png',
            title: 'Notification',
            text: 'The item could not be requested!',
            class_name: 'gritter-info gritter-center'
        });

    }
    $("#request_button").parent().html("Item requested!");
  });


%p#notice= notice
%h1 Listing Items
%table.table.table-striped
  %thead
    %tr
      %th
        = sort_link @search, :title, "Title"
      -if Rails.env.development? || admin_signed_in?
        %th
          = sort_link @search, :barcode, "Barcode"
      %th
        = sort_link @search, :category_id, "Category"
      %th
        = sort_link @search, :publisher, "Publisher"
      %th
        = sort_link @search, :year, "Year"
      %th Available
      -if admin_signed_in?
        %th
          = sort_link @search, :created_at, "Added on"
      %th
      - if admin_signed_in?
        %th{:colspan => "2"}
  %tbody
    = search_form_for @search,:builder => SimpleForm::FormBuilder do |f|
      = f.input :title_cont,:label => "Title"
      -if Rails.env.development? || admin_signed_in?
        =f.input :barcode_cont,:label => "Barcode"
      = f.input :category_search, collection: Category.all.map {|v| v.to_label}, label: "Category: ", required: false,
            include_blank: true
      = f.input :location_search, collection: Location.all.map {|v| v.to_label}, label: "Location: ", required: false,
            include_blank: true
      = f.submit "Search",class: "btn btn-info search"
    - @items.group("barcode", "items.id").each do |item|
      %tr
        %td= item.title
        -if Rails.env.development? || admin_signed_in?
          %td= item.barcode
        %td
          = item.category.name.humanize unless item.category.nil?
        %td= item.publisher
        %td= item.year
        %td
          -if item.total_available == 0 && user_active? && !current_user.already_requested?(item)
            =button_to 'Request this item',request_item_item_path(item), class: "btn btn-primary btn-sm", form: {id: 'request_button'}, method: :get, remote: true
          -elsif item.total_available == 0 && user_active? && current_user.already_requested?(item)
            0 available - Already requested
          -else
            = item.total_available
        - if admin_signed_in?
          %td=item.created_at
        %td= button_to 'Show Info', item, class: "btn btn-primary btn-sm", method: :get
        - if admin_signed_in?
          %td= button_to 'Edit', edit_item_path(item), class: "btn btn-success btn-sm", method: :get
          %td= button_to 'Delete', item, method: :delete, data: { confirm: 'Are you sure you want to delete a copy of this item?' },:class=>"btn btn-danger btn-sm"
= will_paginate @items
%br/
- if admin_signed_in?
  = link_to 'New Item', new_item_path, { :class=>"btn btn-success btn-lg" }
  = link_to 'Bulk Import', new_bulk_items_path, { :class=> "btn btn-success btn-lg" }

:javascript
    $("#q_category_search").select2({allowClear: true, dropdownAutoWidth : true, width: 'resolve'});
